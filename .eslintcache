[{"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\index.js":"1","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\NavBar.js":"2","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\User\\UserIcon.js":"3","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\reportWebVitals.js":"4","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\User\\ConfigModal.js":"5","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\services\\api.js":"6","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\services\\user.js":"7","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\App.js":"8"},{"size":302,"mtime":1613829088107,"results":"9","hashOfConfig":"10"},{"size":819,"mtime":1613829088107,"results":"11","hashOfConfig":"10"},{"size":3832,"mtime":1613873145576,"results":"12","hashOfConfig":"10"},{"size":375,"mtime":1613829088123,"results":"13","hashOfConfig":"10"},{"size":5219,"mtime":1613872149010,"results":"14","hashOfConfig":"10"},{"size":211,"mtime":1613833384646,"results":"15","hashOfConfig":"10"},{"size":1140,"mtime":1613858206047,"results":"16","hashOfConfig":"10"},{"size":147,"mtime":1613829088107,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1atlc38",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\index.js",[],["37","38"],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\NavBar.js",[],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\User\\UserIcon.js",["39"],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\reportWebVitals.js",[],["40","41"],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\Components\\User\\ConfigModal.js",["42","43"],"import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  useTheme,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  TextField,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { getConfigs, postConfigs } from '../../services/user'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogHeader: {\r\n    backgroundColor: \"#0070c2\",\r\n    color: \"white\",\r\n  },\r\n  marginZero: {\r\n    margin: 0,\r\n    marginTop: 40,\r\n    marginBottom: 40,\r\n    padding: 0,\r\n  },\r\n  spaceBetween: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst ConfigModal = () => {\r\n  const style = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const [config, setConfig] = React.useState({})\r\n\r\n  React.useEffect(() => {\r\n    //passar identificação do cliente\r\n    // getConfigs(id_usuario) \r\n    //   .then((resp) => setConfig(resp.data))\r\n    //   .catch((err) => alert(\"erro ao buscar configurações do cliente \" + err))\r\n  }, [])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setConfiguracaoPadrao = () => {\r\n    setConfig({\r\n      fontSize: '14px',\r\n      tema: false,\r\n      grade: 'flutuante'\r\n    })\r\n  };\r\n\r\n  const enviarConfiguracoes = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    // postConfigs(id_usuario, config)\r\n    //   .then((resp) => {\r\n    //     alert(\"configuração enviada com sucesso\")\r\n    //   })\r\n    //   .catch((err) => alert(\"erro ao enviar configuração \" + err))\r\n    alert(\"definiu configuração\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuItem onClick={handleClickOpen}>\r\n        <ListItemIcon>\r\n          <SettingsIcon fontSize=\"large\" />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Configurações\" />\r\n      </MenuItem>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"configuracoes\"\r\n      >\r\n        <DialogTitle id=\"configuracoes\" className={style.dialogHeader}>\r\n          {\"Configurações\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <form>\r\n              <TextField\r\n                id=\"fontsize\"\r\n                name=\"fontsize\"\r\n                label=\"Tamanho da Fonte (Padrão)\"\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"none\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e) => setConfig({ ...config, fontSize: e.target.value })}\r\n                value={config.fontSize}\r\n              />\r\n              <FormControlLabel\r\n                className={style.marginZero}\r\n                label=\"Tema Escuro\"\r\n                labelPlacement=\"start\"\r\n                control={\r\n                  <Switch\r\n                    name=\"tema\"\r\n                    color=\"primary\"\r\n                    checked={config.tema || false}\r\n                    onChange={(e) => setConfig({ ...config, tema: !config.tema })}\r\n                  />\r\n                }\r\n              />\r\n              <FormControl component=\"fieldset\" fullWidth style={{ marginBottom: 150 }}>\r\n                <FormLabel component=\"legend\">\r\n                  Posição Inicial da Grade\r\n                </FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"grade\"\r\n                  name=\"grade\"\r\n                  defaultValue=\"flutuante\"\r\n                  onChange={(e) => setConfig({ ...config, grade: e.target.value })}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"flutuante\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Flutuante\"\r\n                    checked={config.grade === 'flutuante'}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"fixada\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Fixada\"\r\n                    checked={config.grade === 'fixada'}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"novatela\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Nova Tela\"\r\n                    checked={config.grade === 'novatela'}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </form>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className={style.spaceBetween}>\r\n          <Button autoFocus onClick={setConfiguracaoPadrao} color=\"primary\">\r\n            Configuração Padrão\r\n          </Button>\r\n          <Button onClick={enviarConfiguracoes} color=\"primary\" autoFocus>\r\n            Salvar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigModal;\r\n","C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\services\\api.js",[],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\services\\user.js",[],"C:\\Users\\WIN10PRO\\Documents\\PROJETOS\\topocart\\src\\App.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":10,"nodeType":"50","messageId":"51","endLine":20,"endColumn":16},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","severity":1,"message":"54","line":25,"column":10,"nodeType":"50","messageId":"51","endLine":25,"endColumn":20},{"ruleId":"48","severity":1,"message":"55","line":25,"column":22,"nodeType":"50","messageId":"51","endLine":25,"endColumn":33},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logout' is defined but never used.","Identifier","unusedVar",["56"],["57"],"'getConfigs' is defined but never used.","'postConfigs' is defined but never used.","no-global-assign","no-unsafe-negation"]